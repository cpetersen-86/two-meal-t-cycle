\ Filename: OFAAMEAL_adlib.MPC
\ Christian Petersen
\ Date: 21 Feb 2013
\ Adapted for use with a 2 meal schedule - one non-24h meal and one daily meal - Sept 2017 CP
\ Added a timer for in between meals (A) and another timer for meal durations (E) to automate the T cycle (Set in SS1).  -1 sept 2016 CP
\ Program must be started at the end of the non-24h meal (beginning of no meal period)
\ Variable FI lever-pressing task designed for operant boxes with pellet dispenser reinforcement.
\ PREVIOUS CHANGES: All changeable variables are now defined in S.S.1, S1, making changes far simpler
\ Start time is now time-dependent
\ Added Incremental Reward Count Array
\ Added periodic data flush (every 120 minutes)
\ Eliminated seperate response counter and reward counter. Placed reward administration into S.S.1 (Main FI logic)


\Defining Constants:
^Pellet=8
^RightLever=2

\ Variables Used:
\ A=Duration between non-24h meals (T length minus meal length) in minutes
\ B=Bin Length (in seconds)
\ C=Lever Bin Array
\ D=Reward Bin Array
\ E=Duration of non-24h meal (in minutes)
\ F=Non-24h Counter (for time between non-24h meals)
\ I=Index into the various time based arrays (C,D)
\ J,K,L=Current Hour,Minute,Second
\ M=Minute Timer
\ P=meal length counter (for non-24h meal)
\ R=Time (PST) of the 24h meal
\ S=24h Mealtime Indicator (0=no meal, 1=meal)
\ U=Data flush frequency
\ W=the start minute (to synchronize time)
\ X=FI interval
\ Y=26h Mealtime Indicator (0=no meal, 1=meal)
\ Available variables (G, H, N, O,T, V)

diskvars=C,D
DIM C = 250000 \arbitrary value
DIM D = 250000

\-----------------S.S.1: Main Control Logic for FI schedule -----------------------------/
S.S.1,
S1,
    #START: SET W=00, R=12, A=1500, E=60, B=60, U=360, X=3, Y=0, S=0; ON ^RightLever --->S2      \Sets needed values (see above)

\--------Sets Time to Start------------
S2,
    0.01": TIME J,K,L;
    IF K=W[@start,@wait]
            @start: SET X=X*1"; SHOW 6,T24 Ind,S, 7,T26 Ind,Y--->S3      \Converts X into seconds
            @wait:--->S2
\--------------------------------------
S3,
    X#T:--->S4
S4,
    #R3: IF (Y=1) OR (S=1) [@food, @nofood]
                        @food: ON^Pellet ---> S5
                        @nofood: ---> S3
S5,
    0.05": OFF^Pellet; Z1 --->S3


\-----------------S.S.2: Time Display-----------------------------/
S.S.2,
S1,
    #START: SHOW 1,Elapsed Time,M --->S2

S2,
    0.01": TIME J,K,L;
    IF K=W[@start,@wait]
            @start: --->S3
            @wait:---> S2

S3,
    1': ADD M; SHOW 1,Elapsed Time,M --->SX    \Adds M as minutes



\-----S.S.3: Incremental response count array: C(0)=total responses; C(I)=current bin responses-----/
S.S.3,
S1,
    #START: SET I=1--->S2

S2,
    0.01": TIME J,K,L;
    IF K=W[@start,@wait]
            @start:SHOW 2,Bin Presses,C(I), 3,Total Presses,C(0) --->S3
            @wait:--->S2

S3,
    1": SHOW 2,Bin Presses,C(I), 3,Total Presses,C(0) --->S4

S4,   \Response Count and Display
    #R3: ADD C(0), C(I); SHOW 2,Bin Presses,C(I), 3,Total Presses,C(0) --->SX

\-----S.S.4: Incremental Reward Count Array: D(0)=total rewards; D(I)=current bin rewards-----/
S.S.4,
S1,
    #START: ---> S2

S2,
   0.01": TIME J,K,L;
   IF K=W[@start,@wait]
           @start: SHOW 4,Bin Pellets,D(I), 5,Total Pellets,D(0) --->S3
           @wait:--->S2

S3,
    1": SHOW 4,Bin Pellets,D(I), 5,Total Pellets,D(0) --->S4

S4,   \Reward Count and Display
    #Z1: ADD D(0), D(I); SHOW 4,Bin Pellets,D(I), 5,Total Pellets,D(0) --->SX

\---------------S.S.5: Increment to the next counter every B seconds---------------/
S.S.5,
S1,
    #START: SET C(I+1)=-987.987---> S2

S2,
    0.01": TIME J,K,L;
    IF K=W[@start,@wait]
            @start:SET B=B*1" --->S3    \Converts B into seconds
            @wait:---> S2

S3,
    B#T: ADD I; SET C(I)=0, C(I+1)=-987.987, D(I)=0, D(I+1)=-987.987; SHOW 2,Bin Presses,C(I), 4,Bin Pellets,D(I) --->SX


\-----------------S.S.6: Periodic Data Flush-----------------------------/
S.S.6,
S1,
#START: SET U=U*1'--->S2  \Converts G into minutes
S2,
    0.01": TIME J,K,L;
        IF K=W[@start,@wait]
                @start:--->S3
                @wait:--->S2
S3,
    U#T: FLUSH --->SX


\-----------------------S.S.7 T26 Mealtime Determiner--------------------------------------------------
S.S.7, \Timer for the 26h meal (determine whether it is meal time)
S1,
#START: SET F=0 --->S2
S2,
    0.01": TIME J,K,L;
        IF K=W[@start,@wait]
                @start: --->S3
                @wait:--->S2
S3,
    1':ADD F; IF F < A [@nomeal, @meal]
                        @nomeal: ---> S3
                        @meal: SET Y = 1; SHOW 7,T26 Ind,Y ---> S4
S4,
    0.01": SET F=0, P=0 ---> S5
S5,
    1': ADD P; IF P=E [@end, @cont]
                         @end: SET Y=0; SHOW 7, T26 Ind,Y ---> S3
                         @cont: ---> S5

\-----------------------S.S.8 T24 Mealtime Determiner--------------------------------------------------
S.S.8, \Timer for the 24h meal (determine whether it is meal time)
S1,
#START:  --->S2
S2,
    0.01": TIME J,K,L;
        IF K=W[@start,@wait]
                @start: --->S3
                @wait:--->S2
S3,
    1':TIME J,K,L;
    IF J=R [@checkmin, @continue]
             @checkmin:IF ((K>=0) AND (K<50)) [@meal, @nomeal]
                                              @meal: SET S = 1; SHOW 6,T24 Ind,S ---> S3
                                              @nomeal: SET S = 0; SHOW 6,T24 Ind,S --->S3
             @continue: SET S = 0; SHOW 6,T24 Ind,S ---> S3


